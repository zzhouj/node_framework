// Generated by CoffeeScript 1.7.1
(function() {
  var myUtils, prompt, _;

  prompt = require('./utils/prompt');

  myUtils = require('./utils/myUtils');

  _ = require('underscore');

  module.exports = function(grunt) {
    grunt.initConfig({
      init: {
        files: ['package.json', 'restart.sh', 'config/index.json', 'routes/index.coffee', 'routes/index.js']
      }
    });
    return grunt.registerMultiTask('init', function() {
      var done, filesSrc;
      done = this.async();
      filesSrc = this.filesSrc;
      return prompt({
        'PRJ_NAME': ['project name', 'node_framework'],
        'TITLE': ['web app title', 'node_framework'],
        'PORT': ['web app port', '3000'],
        'DB_HOST': ['mysql host', 'localhost'],
        'DB_PORT': ['mysql server port', '3306'],
        'DB_NAME': ['database name', 'test'],
        'DB_USER': ['database username', 'test'],
        'DB_PASSWD': ['database password', '123456'],
        'ROOT_SECRET': ['root secret of web app', myUtils.genNumPass()],
        'DEFAULT_APP': ['default app of web app', 'user']
      }, function(err, answers) {
        if (err) {
          grunt.log.error(err);
        }
        if (err) {
          return done(false);
        }
        grunt.log.writeln(JSON.stringify(answers));
        _.each(filesSrc, function(file) {
          var content;
          content = grunt.file.read(file);
          if (content) {
            _.each(answers, function(val, key) {
              return content = content.replace(new RegExp("\\{\\{" + key + "\\}\\}", 'g'), val);
            });
            return grunt.file.write(file, content);
          }
        });
        return done();
      });
    });
  };

}).call(this);
